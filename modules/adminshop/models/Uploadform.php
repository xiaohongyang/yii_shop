<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2015/8/10
 * Time: 13:16
 */

namespace app\modules\adminshop\models;


use yii\db\ActiveRecord;

class Uploadform extends ActiveRecord{



    //1.表名  2.列名称   3.文件路径
    const TABLE_NAME_SHOP_CONFIG = 'shop_config';

    /*public $columnArray = [
        self::TABLE_NAME_SHOP_CONFIG => 'id',
    ];

    //配置表文件路径
    public $dirArray = [
        self::TABLE_NAME_SHOP_CONFIG => "",
    ];*/

    private $fileTableName = 'default';

    /**
     * @return string
     */
    public function getFileTableName()
    {
        return $this->fileTableName;
    }

    /**
     * @param string $fileTableName
     */
    public function setFileTableName($fileTableName)
    {
        $this->fileTableName = $fileTableName;
    }

    private $config = [
        'shop_config' => [
            'column' => 'id',
            'dir' => 'upload/shopconfig/'
        ]
    ];
    public $file_name;
    public $file_ext;

    const SCENARIO_CREATE  = 'create';


    public $file;
    public $table;

    const FILE_TYPE_IMAGE = 1;

    public $typeArray = [
        1 => array('jpg','gif','png'),
    ];



    public function formName()
    {
        return 'UploadForm'; // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [

            [['file_type'] , 'required', 'on' => self::SCENARIO_CREATE,],
            [['file_name'], 'checkFileType', 'on' => self::SCENARIO_CREATE,],
            [['table_name'], 'required', 'on' => self::SCENARIO_CREATE],
            [['file_ext'], 'required', 'on' => self::SCENARIO_CREATE],
        ];
    }



    /**
     * 添加记录
     *
     * @param $params
     * @return bool
     */
    public function create($params)
    {
        $this->scenario = self::SCENARIO_CREATE;
        if (!$this->load($params) && !$this->validate()) return false;

        $this->file_dir = $this->getDir();
        $this->column_name = $this->getColumn();



        return $this->save();
    }

    public function edit($id, $upData)
    {
        $data = $this->findOne($id);
        foreach ($upData as $k=>$v) {
            $data->$k = $v;
        }

        return $data->save();
    }

    /**
     * 设置默认上传文件名
     * @return bool
     */
    public function beforeValidate()
    {

        if ($this->isNewRecord) {
            $this->setDefaultFileName();
        }

         return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }


    private function setDefaultFileName()
    {

        $this->file_name = $this->file_name?:time();

        $this->file_name = $this->file_name.'.'.$this->file_ext;
        $this->setAttribute('file_name', $this->file_name);

    }


    public function checkFileType()
    {
        //扩展名
        $file_name = $this->file_name;

        $arr = explode('.', $file_name);
        $ext = array_pop($arr);

        //文件类型
        if ($this->isFileTypeOk($ext, $this->file_type)) {

            return true;
        }

        $this->addError('file_name', '文件不合法!');
        return false;

    }


    /**
     * 判断文件扩展名是否合法
     *
     * e.x: isFileType('jpg', 'image')
     * @param $ext
     * @param $fileType
     * @return bool
     */
    public function isFileTypeOk($ext, $fileType)
    {

        if(!$ext || is_null($fileType) )
            return false;

        $fileExtArray = $this->typeArray[$fileType];
        if ($fileExtArray && in_array($ext, $fileExtArray)) {
            return true;
        }
        return false;
    }

    public function getDir()
    {
        return $this->getConfig()['dir'];
    }

    public function getColumn()
    {
        return $this->getConfig()['column'];
    }

    private function getConfig()
    {
        return $this->config[$this->getFileTableName()];
    }


    public function updateColumnValue($columnValue, $fileName)
    {


        $count = $this->find()->where(['column_value'=>$columnValue, 'file_name'=>$fileName])->count();
        $sql = $this->find()->where(['column_value'=>$columnValue, 'file_name'=>$fileName])->createCommand()->getRawSql();

        if ($count) {
            //数据没有修改，返回

            return false;
        }

        //将旧的column_value清空
        \Yii::$app->db->createCommand()->update(self::tableName(), ['column_value'=>''], ['column_value'=>$columnValue])->execute();

        //更新新的column_value
        $upRow = $this->findOne(array('file_name'=>$fileName));
        $upRow->column_value = $columnValue;
        $upRow->save();
    }

}